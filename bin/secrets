#!/usr/bin/env bash
set -eo pipefail

if ! op whoami >/dev/null 2>&1; then
    echo "Please login to 1Password!"
    exit 1
fi

export GH_TOKEN=$(op read op://Gopad/Github/token)

echo "---> bot token for all repos"
gh secret set BOT_ACCESS_TOKEN --body "$(op read op://Gopad/Github/token)" --org gopad --visibility all --app actions

echo "---> bot token for .github repo (dependabot)"
gh secret set BOT_ACCESS_TOKEN --body "$(op read op://Gopad/Github/token)" --repo "gopad/.github" --app dependabot

for APP in dependabot actions; do
    echo "---> token app for public repos (${APP})"
    gh secret set TOKEN_EXCHANGE_APP --body "906029" --org gopad --visibility all --app ${APP}

    echo "---> token install for public repos (${APP})"
    gh secret set TOKEN_EXCHANGE_INSTALL --body "51155341" --org gopad --visibility all --app ${APP}

    echo "---> token key for public repos (${APP})"
    gh secret set TOKEN_EXCHANGE_KEY --body "$(op read op://Gopad/Github/exchangekey | base64 --decode)" --org gopad --visibility all --app ${APP}

    echo "---> access key for public repos (${APP})"
    gh secret set AWS_ACCESS_KEY_ID --body "$(op read op://Gopad/Uploads/username)" --org gopad --visibility all --app ${APP}

    echo "---> secret key for public repos (${APP})"
    gh secret set AWS_SECRET_ACCESS_KEY --body "$(op read op://Gopad/Uploads/password)" --org gopad --visibility all --app ${APP}

    echo "---> gnupg key for public repos (${APP})"
    gh secret set GNUPG_KEY --body "$(op read op://Gopad/Gnupg/notesPlain)" --org gopad --visibility all --app ${APP}

    REPO=gopad-infra
    echo "---> cloudflare email for ${REPO} (${APP})"
    gh secret set CLOUDFLARE_EMAIL --body "$(op read op://Gopad/Cloudflare/username)" --repo "gopad/${REPO}" --app ${APP}

    echo "---> cloudflare token for ${REPO} (${APP})"
    gh secret set CLOUDFLARE_API_KEY --body "$(op read op://Gopad/Cloudflare/token)" --repo "gopad/${REPO}" --app ${APP}

    echo "---> infra access for ${REPO} (${APP})"
    gh secret set AWS_ACCESS_KEY_ID --body "$(op read op://Gopad/Terraform/username)" --repo "gopad/${REPO}" --app ${APP}

    echo "---> infra secret for ${REPO} (${APP})"
    gh secret set AWS_SECRET_ACCESS_KEY --body "$(op read op://Gopad/Terraform/password)" --repo "gopad/${REPO}" --app ${APP}

    REPO=.github
    echo "---> infra access for ${REPO} (${APP})"
    gh secret set AWS_ACCESS_KEY_ID --body "$(op read op://Gopad/Terraform/username)" --repo "gopad/${REPO}" --app ${APP}

    echo "---> infra secret for ${REPO} (${APP})"
    gh secret set AWS_SECRET_ACCESS_KEY --body "$(op read op://Gopad/Terraform/password)" --repo "gopad/${REPO}" --app ${APP}
done

REPO="gopad-api"
echo "---> codacy token for ${REPO}"
gh secret set CODACY_PROJECT_TOKEN --body "$(op read op://Gopad/Codacy/api)" --repo "gopad/${REPO}" --app actions

echo "---> docker username for ${REPO}"
gh secret set DOCKER_USERNAME --body "$(op read op://Gopad/Docker/username)" --repo "gopad/${REPO}" --app actions

echo "---> docker password for ${REPO}"
gh secret set DOCKER_PASSWORD --body "$(op read op://Gopad/Docker/password)" --repo "gopad/${REPO}" --app actions

echo "---> quay apikey for ${REPO}"
gh secret set QUAY_APIKEY --body "$(op read op://Gopad/Quay/apikey)" --repo "gopad/${REPO}" --app actions

echo "---> quay username for ${REPO}"
gh secret set QUAY_USERNAME --body "$(op read op://Gopad/Quay/username)" --repo "gopad/${REPO}" --app actions

echo "---> quay password for ${REPO}"
gh secret set QUAY_PASSWORD --body "$(op read op://Gopad/Quay/password)" --repo "gopad/${REPO}" --app actions

REPO="gopad-cli"
echo "---> codacy token for ${REPO}"
gh secret set CODACY_PROJECT_TOKEN --body "$(op read op://Gopad/Codacy/cli)" --repo "gopad/${REPO}" --app actions

echo "---> docker username for ${REPO}"
gh secret set DOCKER_USERNAME --body "$(op read op://Gopad/Docker/username)" --repo "gopad/${REPO}" --app actions

echo "---> docker password for ${REPO}"
gh secret set DOCKER_PASSWORD --body "$(op read op://Gopad/Docker/password)" --repo "gopad/${REPO}" --app actions

echo "---> quay apikey for ${REPO}"
gh secret set QUAY_APIKEY --body "$(op read op://Gopad/Quay/apikey)" --repo "gopad/${REPO}" --app actions

echo "---> quay username for ${REPO}"
gh secret set QUAY_USERNAME --body "$(op read op://Gopad/Quay/username)" --repo "gopad/${REPO}" --app actions

echo "---> quay password for ${REPO}"
gh secret set QUAY_PASSWORD --body "$(op read op://Gopad/Quay/password)" --repo "gopad/${REPO}" --app actions

REPO="gopad-go"
echo "---> codacy token for ${REPO}"
gh secret set CODACY_PROJECT_TOKEN --body "$(op read op://Gopad/Codacy/go)" --repo "gopad/${REPO}" --app actions

REPO="gopad-docs"
echo "---> netlify token for ${REPO}"
gh secret set NETLIFY_AUTH_TOKEN --body "$(op read op://Gopad/Netlify/token)" --repo "gopad/${REPO}" --app actions

echo "---> netlify site for ${REPO}"
gh secret set NETLIFY_SITE_ID --body 803bb495-0976-44e3-907e-d0bd41adbe4a --repo "gopad/${REPO}" --app actions

REPO="gopad-js"
echo "---> npm token for ${REPO}"
gh secret set NPM_TOKEN --body "$(op read op://Gopad/Npmjs/token)" --repo "gopad/${REPO}" --app actions

REPO="gopad-python"
echo "---> pypi token for ${REPO}"
gh secret set PYPI_TOKEN --body "$(op read op://Gopad/PyPi/token)" --repo "gopad/${REPO}" --app actions

REPO="gopad-ruby"
echo "---> pypi token for ${REPO}"
gh secret set RUBYGEMS_TOKEN --body "$(op read op://Gopad/Rubygems/token)" --repo "gopad/${REPO}" --app actions
